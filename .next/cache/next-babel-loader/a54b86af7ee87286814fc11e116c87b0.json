{"ast":null,"code":"import _defineProperty from \"/Users/shai/9april2021/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shai/9april2021/components/talk-card.tsx\",\n    _s = $RefreshSig$();\n\n/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport cn from 'classnames';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport { parseISO, format, isBefore, isAfter } from 'date-fns';\nimport styles from './talk-card.module.css';\n\nvar formatDate = function formatDate(date) {\n  // https://github.com/date-fns/date-fns/issues/946\n  return format(parseISO(date), \"h:mmaaaaa'm'\");\n};\n\nexport default function TalkCard(_ref) {\n  _s();\n\n  var _this = this;\n\n  var _ref$talk = _ref.talk,\n      title = _ref$talk.title,\n      speaker = _ref$talk.speaker,\n      start = _ref$talk.start,\n      end = _ref$talk.end,\n      showTime = _ref.showTime;\n\n  var _useState = useState(false),\n      isTalkLive = _useState[0],\n      setIsTalkLive = _useState[1];\n\n  var _useState2 = useState(''),\n      startAndEndTime = _useState2[0],\n      setStartAndEndTime = _useState2[1];\n\n  useEffect(function () {\n    var now = Date.now();\n    setIsTalkLive(isAfter(now, parseISO(start)) && isBefore(now, parseISO(end)));\n    setStartAndEndTime(\"\".concat(formatDate(start), \" \\u2013 \").concat(formatDate(end)));\n  }, []);\n  var firstSpeakerLink = \"/speakers/\".concat(speaker[0].slug);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.talk,\n    children: [showTime && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.time,\n      children: startAndEndTime || /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\xA0\"\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: firstSpeakerLink,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: cn(styles.card, _defineProperty({}, styles['is-live'], isTalkLive)),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles['card-body'],\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            title: title,\n            className: styles.title,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.speaker,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles['avatar-group'],\n              children: speaker.map(function (s) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles['avatar-wrapper'],\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    loading: \"lazy\",\n                    alt: s.name,\n                    className: styles.avatar,\n                    src: s.image.url,\n                    title: s.name,\n                    width: 24,\n                    height: 24\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 21\n                  }, _this)\n                }, s.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: styles.name,\n              children: speaker.length === 1 ? speaker[0].name : \"\".concat(speaker.length, \" speakers\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, title, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TalkCard, \"ABqKs78laqmMY9GqcquW8trxaYU=\");\n\n_c = TalkCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TalkCard\");","map":{"version":3,"sources":["/Users/shai/9april2021/components/talk-card.tsx"],"names":["cn","Image","Link","useState","useEffect","parseISO","format","isBefore","isAfter","styles","formatDate","date","TalkCard","talk","title","speaker","start","end","showTime","isTalkLive","setIsTalkLive","startAndEndTime","setStartAndEndTime","now","Date","firstSpeakerLink","slug","time","card","map","s","name","avatar","image","url","length"],"mappings":"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","sourcesContent":["/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport cn from 'classnames';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport { parseISO, format, isBefore, isAfter } from 'date-fns';\nimport { Talk } from '@lib/types';\nimport styles from './talk-card.module.css';\n\ntype Props = {\n  key: string;\n  talk: Talk;\n  showTime: boolean;\n};\n\nconst formatDate = (date: string) => {\n  // https://github.com/date-fns/date-fns/issues/946\n  return format(parseISO(date), \"h:mmaaaaa'm'\");\n};\n\nexport default function TalkCard({ talk: { title, speaker, start, end }, showTime }: Props) {\n  const [isTalkLive, setIsTalkLive] = useState(false);\n  const [startAndEndTime, setStartAndEndTime] = useState('');\n\n  useEffect(() => {\n    const now = Date.now();\n    setIsTalkLive(isAfter(now, parseISO(start)) && isBefore(now, parseISO(end)));\n    setStartAndEndTime(`${formatDate(start)} – ${formatDate(end)}`);\n  }, []);\n\n  const firstSpeakerLink = `/speakers/${speaker[0].slug}`;\n\n  return (\n    <div key={title} className={styles.talk}>\n      {showTime && <p className={styles.time}>{startAndEndTime || <>&nbsp;</>}</p>}\n      <Link href={firstSpeakerLink}>\n        <a\n          className={cn(styles.card, {\n            [styles['is-live']]: isTalkLive\n          })}\n        >\n          <div className={styles['card-body']}>\n            <h4 title={title} className={styles.title}>\n              {title}\n            </h4>\n            <div className={styles.speaker}>\n              <div className={styles['avatar-group']}>\n                {speaker.map(s => (\n                  <div key={s.name} className={styles['avatar-wrapper']}>\n                    <Image\n                      loading=\"lazy\"\n                      alt={s.name}\n                      className={styles.avatar}\n                      src={s.image.url}\n                      title={s.name}\n                      width={24}\n                      height={24}\n                    />\n                  </div>\n                ))}\n              </div>\n              <h5 className={styles.name}>\n                {speaker.length === 1 ? speaker[0].name : `${speaker.length} speakers`}\n              </h5>\n            </div>\n          </div>\n        </a>\n      </Link>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}