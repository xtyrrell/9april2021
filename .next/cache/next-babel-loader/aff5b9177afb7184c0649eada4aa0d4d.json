{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _s = $RefreshSig$();\n\n/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport NProgress from 'nprogress';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nexport default function Progress() {\n  _s();\n\n  var router = useRouter();\n  useEffect(function () {\n    var timeout;\n\n    var start = function start() {\n      timeout = setTimeout(NProgress.start, 100);\n    };\n\n    var done = function done() {\n      clearTimeout(timeout);\n      NProgress.done();\n    };\n\n    router.events.on('routeChangeStart', start);\n    router.events.on('routeChangeComplete', done);\n    router.events.on('routeChangeError', done);\n    return function () {\n      router.events.off('routeChangeStart', start);\n      router.events.off('routeChangeComplete', done);\n      router.events.off('routeChangeError', done);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Progress, \"vQduR7x+OPXj6PSmJyFnf+hU7bg=\", false, function () {\n  return [useRouter];\n});\n\n_c = Progress;\n\nvar _c;\n\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"sources":["/Users/shai/9april2021/components/nprogress.tsx"],"names":["NProgress","useRouter","useEffect","Progress","router","timeout","start","setTimeout","done","clearTimeout","events","on","off"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,WAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIG,OAAJ;;AAEA,QAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBD,MAAAA,OAAO,GAAGE,UAAU,CAACP,SAAS,CAACM,KAAX,EAAkB,GAAlB,CAApB;AACD,KAFD;;AAIA,QAAME,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBC,MAAAA,YAAY,CAACJ,OAAD,CAAZ;AACAL,MAAAA,SAAS,CAACQ,IAAV;AACD,KAHD;;AAKAJ,IAAAA,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCL,KAArC;AACAF,IAAAA,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCH,IAAxC;AACAJ,IAAAA,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCH,IAArC;AACA,WAAO,YAAM;AACXJ,MAAAA,MAAM,CAACM,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCN,KAAtC;AACAF,MAAAA,MAAM,CAACM,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCJ,IAAzC;AACAJ,MAAAA,MAAM,CAACM,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCJ,IAAtC;AACD,KAJD;AAKD,GApBQ,EAoBN,EApBM,CAAT;AAqBA,sBAAO,qCAAP;AACD;;GAzBuBL,Q;UACPF,S;;;KADOE,Q","sourcesContent":["/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NProgress from 'nprogress';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nexport default function Progress() {\n  const router = useRouter();\n\n  useEffect(() => {\n    let timeout: NodeJS.Timeout;\n\n    const start = () => {\n      timeout = setTimeout(NProgress.start, 100);\n    };\n\n    const done = () => {\n      clearTimeout(timeout);\n      NProgress.done();\n    };\n\n    router.events.on('routeChangeStart', start);\n    router.events.on('routeChangeComplete', done);\n    router.events.on('routeChangeError', done);\n    return () => {\n      router.events.off('routeChangeStart', start);\n      router.events.off('routeChangeComplete', done);\n      router.events.off('routeChangeError', done);\n    };\n  }, []);\n  return <></>;\n}\n"]},"metadata":{},"sourceType":"module"}