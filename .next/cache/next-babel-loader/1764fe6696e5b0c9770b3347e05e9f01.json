{"ast":null,"code":"import _defineProperty from \"/Users/shai/9april2021/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/shai/9april2021/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shai/9april2021/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport useSWR from 'swr';\nexport default function useLoginStatus(opts) {\n  _s();\n\n  var _useSWR = useSWR(\"/api/auth\", /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(url);\n\n            case 2:\n              res = _context.sent;\n\n              if (res.ok) {\n                _context.next = 5;\n                break;\n              }\n\n              throw new Error();\n\n            case 5:\n              return _context.abrupt(\"return\", res.json());\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), _objectSpread(_objectSpread({}, opts), {}, {\n    revalidateOnFocus: false\n  })),\n      data = _useSWR.data,\n      error = _useSWR.error,\n      mutate = _useSWR.mutate;\n\n  return {\n    loginStatus: error ? 'loggedOut' : !data ? 'loading' : 'loggedIn',\n    mutate: mutate\n  };\n}\n\n_s(useLoginStatus, \"pbBX9XurWnZRjcYBDDzfT5aPhoI=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"sources":["/Users/shai/9april2021/lib/hooks/use-login-status.ts"],"names":["useSWR","useLoginStatus","opts","url","fetch","res","ok","Error","json","revalidateOnFocus","data","error","mutate","loginStatus"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,MAAP,MAAwC,KAAxC;AAEA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAAgD;AAAA;;AAAA,gBAC7BF,MAAM;AAAA,wEAEpC,iBAAMG,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoBC,KAAK,CAACD,GAAD,CADzB;;AAAA;AACQE,cAAAA,GADR;;AAAA,kBAEOA,GAAG,CAACC,EAFX;AAAA;AAAA;AAAA;;AAAA,oBAGU,IAAIC,KAAJ,EAHV;;AAAA;AAAA,+CAKSF,GAAG,CAACG,IAAJ,EALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFoC;;AAAA;AAAA;AAAA;AAAA,uCAU/BN,IAV+B;AAWlCO,IAAAA,iBAAiB,EAAE;AAXe,KADuB;AAAA,MACrDC,IADqD,WACrDA,IADqD;AAAA,MAC/CC,KAD+C,WAC/CA,KAD+C;AAAA,MACxCC,MADwC,WACxCA,MADwC;;AAgB7D,SAAO;AACLC,IAAAA,WAAW,EAAEF,KAAK,GACb,WADa,GAEd,CAACD,IAAD,GACC,SADD,GAEC,UALA;AAMLE,IAAAA,MAAM,EAANA;AANK,GAAP;AAQD;;GAxBuBX,c;UACUD,M","sourcesContent":["/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport useSWR, { ConfigInterface } from 'swr';\n\nexport default function useLoginStatus(opts?: ConfigInterface) {\n  const { data, error, mutate } = useSWR(\n    `/api/auth`,\n    async url => {\n      const res = await fetch(url);\n      if (!res.ok) {\n        throw new Error();\n      }\n      return res.json();\n    },\n    {\n      ...opts,\n      revalidateOnFocus: false\n    }\n  );\n\n  return {\n    loginStatus: error\n      ? ('loggedOut' as const)\n      : !data\n      ? ('loading' as const)\n      : ('loggedIn' as const),\n    mutate\n  };\n}\n"]},"metadata":{},"sourceType":"module"}