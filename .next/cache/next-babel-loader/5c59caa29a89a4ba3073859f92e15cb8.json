{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport smoothscroll from 'smoothscroll-polyfill';\nlet installed = false;\nexport default function scroll(opts) {\n  if (!installed) {\n    try {\n      smoothscroll.polyfill();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('smoothscroll polyfill failed', err);\n      return;\n    }\n\n    installed = true;\n  }\n\n  try {\n    window.scroll(_objectSpread({\n      behavior: 'smooth'\n    }, opts));\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error('smoothscroll polyfill failed', err);\n  }\n}\nexport const scrollTo = (el, offset = 0) => {\n  scroll({\n    top: el.offsetTop + offset\n  });\n};","map":{"version":3,"sources":["/Users/shai/9april2021/lib/smooth-scroll.ts"],"names":["smoothscroll","installed","scroll","opts","polyfill","err","console","error","window","behavior","scrollTo","el","offset","top","offsetTop"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,YAAP,MAAyB,uBAAzB;AAEA,IAAIC,SAAS,GAAG,KAAhB;AAEA,eAAe,SAASC,MAAT,CAAgBC,IAAhB,EAAuC;AACpD,MAAI,CAACF,SAAL,EAAgB;AACd,QAAI;AACFD,MAAAA,YAAY,CAACI,QAAb;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZ;AACAC,MAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,GAA9C;AACA;AACD;;AACDJ,IAAAA,SAAS,GAAG,IAAZ;AACD;;AAED,MAAI;AACFO,IAAAA,MAAM,CAACN,MAAP;AAAgBO,MAAAA,QAAQ,EAAE;AAA1B,OAAuCN,IAAvC;AACD,GAFD,CAEE,OAAOE,GAAP,EAAY;AACZ;AACAC,IAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,GAA9C;AACD;AACF;AAED,OAAO,MAAMK,QAAQ,GAAG,CAACC,EAAD,EAAkBC,MAAM,GAAG,CAA3B,KAAiC;AACvDV,EAAAA,MAAM,CAAC;AACLW,IAAAA,GAAG,EAAEF,EAAE,CAACG,SAAH,GAAeF;AADf,GAAD,CAAN;AAGD,CAJM","sourcesContent":["/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport smoothscroll from 'smoothscroll-polyfill';\n\nlet installed = false;\n\nexport default function scroll(opts: ScrollToOptions) {\n  if (!installed) {\n    try {\n      smoothscroll.polyfill();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('smoothscroll polyfill failed', err);\n      return;\n    }\n    installed = true;\n  }\n\n  try {\n    window.scroll({ behavior: 'smooth', ...opts });\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error('smoothscroll polyfill failed', err);\n  }\n}\n\nexport const scrollTo = (el: HTMLElement, offset = 0) => {\n  scroll({\n    top: el.offsetTop + offset\n  });\n};\n"]},"metadata":{},"sourceType":"module"}