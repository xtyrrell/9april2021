{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport useSWR from 'swr';\nexport default function useLoginStatus(opts) {\n  const {\n    data,\n    error,\n    mutate\n  } = useSWR(`/api/auth`, async url => {\n    const res = await fetch(url);\n\n    if (!res.ok) {\n      throw new Error();\n    }\n\n    return res.json();\n  }, _objectSpread(_objectSpread({}, opts), {}, {\n    revalidateOnFocus: false\n  }));\n  return {\n    loginStatus: error ? 'loggedOut' : !data ? 'loading' : 'loggedIn',\n    mutate\n  };\n}","map":{"version":3,"sources":["/Users/shai/9april2021/lib/hooks/use-login-status.ts"],"names":["useSWR","useLoginStatus","opts","data","error","mutate","url","res","fetch","ok","Error","json","revalidateOnFocus","loginStatus"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,MAAP,MAAwC,KAAxC;AAEA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAAgD;AAC7D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA0BL,MAAM,CACnC,WADmC,EAEpC,MAAMM,GAAN,IAAa;AACX,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;;AACA,QAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACX,YAAM,IAAIC,KAAJ,EAAN;AACD;;AACD,WAAOH,GAAG,CAACI,IAAJ,EAAP;AACD,GARmC,kCAU/BT,IAV+B;AAWlCU,IAAAA,iBAAiB,EAAE;AAXe,KAAtC;AAeA,SAAO;AACLC,IAAAA,WAAW,EAAET,KAAK,GACb,WADa,GAEd,CAACD,IAAD,GACC,SADD,GAEC,UALA;AAMLE,IAAAA;AANK,GAAP;AAQD","sourcesContent":["/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport useSWR, { ConfigInterface } from 'swr';\n\nexport default function useLoginStatus(opts?: ConfigInterface) {\n  const { data, error, mutate } = useSWR(\n    `/api/auth`,\n    async url => {\n      const res = await fetch(url);\n      if (!res.ok) {\n        throw new Error();\n      }\n      return res.json();\n    },\n    {\n      ...opts,\n      revalidateOnFocus: false\n    }\n  );\n\n  return {\n    loginStatus: error\n      ? ('loggedOut' as const)\n      : !data\n      ? ('loading' as const)\n      : ('loggedIn' as const),\n    mutate\n  };\n}\n"]},"metadata":{},"sourceType":"module"}