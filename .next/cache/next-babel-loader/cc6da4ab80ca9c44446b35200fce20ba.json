{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shai/9april2021/components/ticket-form.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useState, useRef } from 'react';\nimport { scrollTo } from '@lib/smooth-scroll';\nimport cn from 'classnames';\nimport GithubIcon from '@components/icons/icon-github';\nimport CheckIcon from '@components/icons/icon-check';\nimport { REPO, SITE_ORIGIN } from '@lib/constants';\nimport isMobileOrTablet from '@lib/is-mobile-or-tablet';\nimport useConfData from '@lib/hooks/use-conf-data';\nimport LoadingDots from './loading-dots';\nimport formStyles from './form.module.css';\nimport ticketFormStyles from './ticket-form.module.css';\nimport { saveGithubToken } from '@lib/user-api';\nconst githubEnabled = Boolean(process.env.NEXT_PUBLIC_GITHUB_OAUTH_CLIENT_ID);\nexport default function Form({\n  defaultUsername = '',\n  setTicketGenerationState\n}) {\n  const {\n    0: username,\n    1: setUsername\n  } = useState(defaultUsername);\n  const {\n    0: formState,\n    1: setFormState\n  } = useState('default');\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState('');\n  const {\n    userData,\n    setUserData\n  } = useConfData();\n  const formRef = useRef(null);\n  return formState === 'error' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(formStyles['form-row'], ticketFormStyles['form-row']),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(formStyles['input-label'], formStyles.error),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(formStyles.input, formStyles['input-text']),\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: cn(formStyles.submit, formStyles.error),\n          onClick: () => {\n            setFormState('default');\n            setTicketGenerationState('default');\n          },\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: formRef,\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (formState !== 'default') {\n        setTicketGenerationState('default');\n        setFormState('default');\n        return;\n      }\n\n      setFormState('loading');\n      setTicketGenerationState('loading');\n\n      if (!process.env.NEXT_PUBLIC_GITHUB_OAUTH_CLIENT_ID) {\n        setFormState('error');\n        setErrorMsg('GitHub OAuth App must be set up.');\n        return;\n      }\n\n      const windowWidth = 600;\n      const windowHeight = 700; // https://stackoverflow.com/a/32261263/114157\n\n      const windowTop = window.top.outerHeight / 2 + window.top.screenY - 700 / 2;\n      const windowLeft = window.top.outerWidth / 2 + window.top.screenX - 600 / 2;\n      const openedWindow = window.open(`https://github.com/login/oauth/authorize?client_id=${encodeURIComponent(process.env.NEXT_PUBLIC_GITHUB_OAUTH_CLIENT_ID)}`, 'githubOAuth', `resizable,scrollbars,status,width=${windowWidth},height=${windowHeight},top=${windowTop},left=${windowLeft}`);\n      new Promise(resolve => {\n        const interval = setInterval(() => {\n          if (!openedWindow || openedWindow.closed) {\n            clearInterval(interval);\n            resolve(undefined);\n          }\n        }, 250);\n        window.addEventListener('message', function onMessage(msgEvent) {\n          // When devtools is opened the message may be received multiple times\n          if (SITE_ORIGIN !== msgEvent.origin || !msgEvent.data.type) {\n            return;\n          }\n\n          clearInterval(interval);\n\n          if (openedWindow) {\n            openedWindow.close();\n          }\n\n          resolve(msgEvent.data);\n        });\n      }).then(async data => {\n        if (!data) {\n          setFormState('default');\n          setTicketGenerationState('default');\n          return;\n        }\n\n        let usernameFromResponse;\n        let name;\n\n        if (data.type === 'token') {\n          const res = await saveGithubToken({\n            id: userData.id,\n            token: data.token\n          });\n\n          if (!res.ok) {\n            throw new Error('Failed to store oauth result');\n          }\n\n          const responseJson = await res.json();\n          usernameFromResponse = responseJson.username;\n          name = responseJson.name;\n        } else {\n          usernameFromResponse = data.login;\n          name = data.name;\n        }\n\n        document.body.classList.add('ticket-generated');\n        setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n          username: usernameFromResponse,\n          name\n        }));\n        setUsername(usernameFromResponse);\n        setFormState('default');\n        setTicketGenerationState('default'); // Prefetch GitHub avatar\n\n        new Image().src = `https://github.com/${usernameFromResponse}.png`; // Prefetch the twitter share URL to eagerly generate the page\n\n        fetch(`/tickets/${usernameFromResponse}`).catch(_ => {});\n      }).catch(err => {\n        // eslint-disable-next-line no-console\n        console.error(err);\n        setFormState('error');\n        setErrorMsg('Error! Please try again.');\n        setTicketGenerationState('default');\n      });\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(formStyles['form-row'], ticketFormStyles['form-row']),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: cn(formStyles.submit, formStyles['generate-with-github'], formStyles[formState], {\n          [formStyles['not-allowed']]: !githubEnabled\n        }),\n        disabled: !process.env.NEXT_PUBLIC_GITHUB_OAUTH_CLIENT_ID || formState === 'loading' || Boolean(username),\n        onClick: () => {\n          if (formRef && formRef.current && isMobileOrTablet()) {\n            scrollTo(formRef.current, formRef.current.offsetHeight);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: ticketFormStyles.generateWithGithub,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: ticketFormStyles.githubIcon,\n            children: /*#__PURE__*/_jsxDEV(GithubIcon, {\n              color: \"#fff\",\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), formState === 'loading' ? /*#__PURE__*/_jsxDEV(LoadingDots, {\n            size: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this) : username || 'Generate with GitHub']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), username ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: ticketFormStyles.checkIcon,\n          children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n            color: \"#fff\",\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: ticketFormStyles.description,\n        children: githubEnabled ? 'Only public info will be used.' : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"GitHub OAuth app is required.\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${REPO}#authentication`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: ticketFormStyles['learn-more'],\n            children: \"Learn more.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/shai/9april2021/components/ticket-form.tsx"],"names":["useState","useRef","scrollTo","cn","GithubIcon","CheckIcon","REPO","SITE_ORIGIN","isMobileOrTablet","useConfData","LoadingDots","formStyles","ticketFormStyles","saveGithubToken","githubEnabled","Boolean","process","env","NEXT_PUBLIC_GITHUB_OAUTH_CLIENT_ID","Form","defaultUsername","setTicketGenerationState","username","setUsername","formState","setFormState","errorMsg","setErrorMsg","userData","setUserData","formRef","error","input","submit","e","preventDefault","windowWidth","windowHeight","windowTop","window","top","outerHeight","screenY","windowLeft","outerWidth","screenX","openedWindow","open","encodeURIComponent","Promise","resolve","interval","setInterval","closed","clearInterval","undefined","addEventListener","onMessage","msgEvent","origin","data","type","close","then","usernameFromResponse","name","res","id","token","ok","Error","responseJson","json","login","document","body","classList","add","Image","src","fetch","catch","_","err","console","current","offsetHeight","generateWithGithub","githubIcon","checkIcon","description"],"mappings":"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","sourcesContent":["/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useState, useRef } from 'react';\nimport { scrollTo } from '@lib/smooth-scroll';\nimport cn from 'classnames';\nimport GithubIcon from '@components/icons/icon-github';\nimport CheckIcon from '@components/icons/icon-check';\nimport { REPO, SITE_ORIGIN, TicketGenerationState } from '@lib/constants';\nimport isMobileOrTablet from '@lib/is-mobile-or-tablet';\nimport useConfData from '@lib/hooks/use-conf-data';\nimport LoadingDots from './loading-dots';\nimport formStyles from './form.module.css';\nimport ticketFormStyles from './ticket-form.module.css';\nimport { saveGithubToken } from '@lib/user-api';\nimport { GitHubOAuthData } from '@lib/types';\n\ntype FormState = 'default' | 'loading' | 'error';\n\ntype Props = {\n  defaultUsername?: string;\n  setTicketGenerationState: React.Dispatch<React.SetStateAction<TicketGenerationState>>;\n};\n\nconst githubEnabled = Boolean(process.env.NEXT_PUBLIC_GITHUB_OAUTH_CLIENT_ID);\n\nexport default function Form({ defaultUsername = '', setTicketGenerationState }: Props) {\n  const [username, setUsername] = useState(defaultUsername);\n  const [formState, setFormState] = useState<FormState>('default');\n  const [errorMsg, setErrorMsg] = useState('');\n  const { userData, setUserData } = useConfData();\n  const formRef = useRef<HTMLFormElement>(null);\n\n  return formState === 'error' ? (\n    <div>\n      <div className={cn(formStyles['form-row'], ticketFormStyles['form-row'])}>\n        <div className={cn(formStyles['input-label'], formStyles.error)}>\n          <div className={cn(formStyles.input, formStyles['input-text'])}>{errorMsg}</div>\n          <button\n            type=\"button\"\n            className={cn(formStyles.submit, formStyles.error)}\n            onClick={() => {\n              setFormState('default');\n              setTicketGenerationState('default');\n            }}\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <form\n      ref={formRef}\n      onSubmit={e => {\n        e.preventDefault();\n\n        if (formState !== 'default') {\n          setTicketGenerationState('default');\n          setFormState('default');\n          return;\n        }\n\n        setFormState('loading');\n        setTicketGenerationState('loading');\n\n        if (!process.env.NEXT_PUBLIC_GITHUB_OAUTH_CLIENT_ID) {\n          setFormState('error');\n          setErrorMsg('GitHub OAuth App must be set up.');\n          return;\n        }\n\n        const windowWidth = 600;\n        const windowHeight = 700;\n        // https://stackoverflow.com/a/32261263/114157\n        const windowTop = window.top.outerHeight / 2 + window.top.screenY - 700 / 2;\n        const windowLeft = window.top.outerWidth / 2 + window.top.screenX - 600 / 2;\n\n        const openedWindow = window.open(\n          `https://github.com/login/oauth/authorize?client_id=${encodeURIComponent(\n            process.env.NEXT_PUBLIC_GITHUB_OAUTH_CLIENT_ID\n          )}`,\n          'githubOAuth',\n          `resizable,scrollbars,status,width=${windowWidth},height=${windowHeight},top=${windowTop},left=${windowLeft}`\n        );\n\n        new Promise<GitHubOAuthData | undefined>(resolve => {\n          const interval = setInterval(() => {\n            if (!openedWindow || openedWindow.closed) {\n              clearInterval(interval);\n              resolve(undefined);\n            }\n          }, 250);\n\n          window.addEventListener('message', function onMessage(msgEvent) {\n            // When devtools is opened the message may be received multiple times\n            if (SITE_ORIGIN !== msgEvent.origin || !msgEvent.data.type) {\n              return;\n            }\n            clearInterval(interval);\n            if (openedWindow) {\n              openedWindow.close();\n            }\n            resolve(msgEvent.data);\n          });\n        })\n          .then(async data => {\n            if (!data) {\n              setFormState('default');\n              setTicketGenerationState('default');\n              return;\n            }\n\n            let usernameFromResponse: string;\n            let name: string;\n            if (data.type === 'token') {\n              const res = await saveGithubToken({ id: userData.id, token: data.token });\n\n              if (!res.ok) {\n                throw new Error('Failed to store oauth result');\n              }\n\n              const responseJson = await res.json();\n              usernameFromResponse = responseJson.username;\n              name = responseJson.name;\n            } else {\n              usernameFromResponse = data.login;\n              name = data.name;\n            }\n\n            document.body.classList.add('ticket-generated');\n            setUserData({ ...userData, username: usernameFromResponse, name });\n            setUsername(usernameFromResponse);\n            setFormState('default');\n            setTicketGenerationState('default');\n\n            // Prefetch GitHub avatar\n            new Image().src = `https://github.com/${usernameFromResponse}.png`;\n\n            // Prefetch the twitter share URL to eagerly generate the page\n            fetch(`/tickets/${usernameFromResponse}`).catch(_ => {});\n          })\n          .catch(err => {\n            // eslint-disable-next-line no-console\n            console.error(err);\n            setFormState('error');\n            setErrorMsg('Error! Please try again.');\n            setTicketGenerationState('default');\n          });\n      }}\n    >\n      <div className={cn(formStyles['form-row'], ticketFormStyles['form-row'])}>\n        <button\n          type=\"submit\"\n          className={cn(\n            formStyles.submit,\n            formStyles['generate-with-github'],\n            formStyles[formState],\n            {\n              [formStyles['not-allowed']]: !githubEnabled\n            }\n          )}\n          disabled={\n            !process.env.NEXT_PUBLIC_GITHUB_OAUTH_CLIENT_ID ||\n            formState === 'loading' ||\n            Boolean(username)\n          }\n          onClick={() => {\n            if (formRef && formRef.current && isMobileOrTablet()) {\n              scrollTo(formRef.current, formRef.current.offsetHeight);\n            }\n          }}\n        >\n          <div className={ticketFormStyles.generateWithGithub}>\n            <span className={ticketFormStyles.githubIcon}>\n              <GithubIcon color=\"#fff\" size={24} />\n            </span>\n            {formState === 'loading' ? (\n              <LoadingDots size={4} />\n            ) : (\n              username || 'Generate with GitHub'\n            )}\n          </div>\n          {username ? (\n            <span className={ticketFormStyles.checkIcon}>\n              <CheckIcon color=\"#fff\" size={24} />\n            </span>\n          ) : null}\n        </button>\n        <p className={ticketFormStyles.description}>\n          {githubEnabled ? (\n            'Only public info will be used.'\n          ) : (\n            <>\n              GitHub OAuth app is required.{' '}\n              <a\n                href={`${REPO}#authentication`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={ticketFormStyles['learn-more']}\n              >\n                Learn more.\n              </a>\n            </>\n          )}\n        </p>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}