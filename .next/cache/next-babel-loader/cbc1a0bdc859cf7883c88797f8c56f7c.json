{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shai/9april2021/components/mobile-menu.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport cn from 'classnames';\nimport { NAVIGATION } from '@lib/constants';\nimport { useOverlayTriggerState } from '@react-stately/overlays';\nimport { useOverlay, usePreventScroll, useModal, OverlayContainer } from '@react-aria/overlays';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useButton } from '@react-aria/button';\nimport styles from './mobile-menu.module.css';\n\nfunction ModalDialog(props) {\n  const router = useRouter();\n  const activeRoute = router.asPath;\n  const ref = useRef(null);\n  const {\n    modalProps\n  } = useModal();\n  const {\n    overlayProps\n  } = useOverlay(props, ref);\n  const {\n    dialogProps\n  } = useDialog(props, ref);\n  usePreventScroll();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['nav-overlay'],\n    children: /*#__PURE__*/_jsxDEV(FocusScope, {\n      contain: true,\n      restoreFocus: true,\n      autoFocus: true,\n      children: /*#__PURE__*/_jsxDEV(\"nav\", _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n        className: styles.nav\n      }, overlayProps), dialogProps), modalProps), {}, {\n        ref: ref,\n        children: NAVIGATION.map(({\n          name,\n          route\n        }) => /*#__PURE__*/_jsxDEV(Link, {\n          href: route,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: cn(styles['nav-item'], {\n              [styles['nav-active']]: activeRoute.startsWith(route)\n            }),\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\nexport default function Overlay() {\n  const state = useOverlayTriggerState({});\n  const ref = useRef(null);\n  const {\n    buttonProps\n  } = useButton({\n    onPress: () => state.isOpen ? state.close() : state.open()\n  }, ref);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", _objectSpread(_objectSpread({\n      \"aria-label\": \"Mobile Menu\",\n      type: \"button\",\n      className: styles.button\n    }, buttonProps), {}, {\n      ref: ref,\n      children: state.isOpen ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        height: \"24\",\n        stroke: \"currentColor\",\n        strokeWidth: \"1.5\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\",\n        shapeRendering: \"geometricPrecision\",\n        className: styles.icon,\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M18 6L6 18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M6 6l12 12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        height: \"24\",\n        stroke: \"currentColor\",\n        strokeWidth: \"1.5\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\",\n        shapeRendering: \"geometricPrecision\",\n        className: styles.icon,\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M3 12h18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M3 6h18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M3 18h18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), state.isOpen && /*#__PURE__*/_jsxDEV(OverlayContainer, {\n      children: /*#__PURE__*/_jsxDEV(ModalDialog, {\n        isOpen: true,\n        onClose: state.close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/shai/9april2021/components/mobile-menu.tsx"],"names":["useRef","useRouter","Link","cn","NAVIGATION","useOverlayTriggerState","useOverlay","usePreventScroll","useModal","OverlayContainer","useDialog","FocusScope","useButton","styles","ModalDialog","props","router","activeRoute","asPath","ref","modalProps","overlayProps","dialogProps","nav","map","name","route","startsWith","Overlay","state","buttonProps","onPress","isOpen","close","open","button","icon"],"mappings":"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","sourcesContent":["/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport cn from 'classnames';\nimport { NAVIGATION } from '@lib/constants';\nimport { useOverlayTriggerState } from '@react-stately/overlays';\nimport { useOverlay, usePreventScroll, useModal, OverlayContainer } from '@react-aria/overlays';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useButton } from '@react-aria/button';\nimport styles from './mobile-menu.module.css';\n\nfunction ModalDialog(props: Parameters<typeof useOverlay>[0] & Parameters<typeof useDialog>[0]) {\n  const router = useRouter();\n  const activeRoute = router.asPath;\n\n  const ref = useRef<HTMLElement | null>(null);\n  const { modalProps } = useModal();\n  const { overlayProps } = useOverlay(props, ref);\n  const { dialogProps } = useDialog(props, ref);\n\n  usePreventScroll();\n\n  return (\n    <div className={styles['nav-overlay']}>\n      <FocusScope contain restoreFocus autoFocus>\n        <nav className={styles.nav} {...overlayProps} {...dialogProps} {...modalProps} ref={ref}>\n          {NAVIGATION.map(({ name, route }) => (\n            <Link key={name} href={route}>\n              <a\n                className={cn(styles['nav-item'], {\n                  [styles['nav-active']]: activeRoute.startsWith(route)\n                })}\n              >\n                {name}\n              </a>\n            </Link>\n          ))}\n        </nav>\n      </FocusScope>\n    </div>\n  );\n}\n\nexport default function Overlay() {\n  const state = useOverlayTriggerState({});\n  const ref = useRef<HTMLButtonElement | null>(null);\n  const { buttonProps } = useButton(\n    {\n      onPress: () => (state.isOpen ? state.close() : state.open())\n    },\n    ref\n  );\n\n  return (\n    <>\n      <button\n        aria-label=\"Mobile Menu\"\n        type=\"button\"\n        className={styles.button}\n        {...buttonProps}\n        ref={ref}\n      >\n        {state.isOpen ? (\n          <svg\n            viewBox=\"0 0 24 24\"\n            width=\"24\"\n            height=\"24\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n            shapeRendering=\"geometricPrecision\"\n            className={styles.icon}\n          >\n            <path d=\"M18 6L6 18\" />\n            <path d=\"M6 6l12 12\" />\n          </svg>\n        ) : (\n          <svg\n            viewBox=\"0 0 24 24\"\n            width=\"24\"\n            height=\"24\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n            shapeRendering=\"geometricPrecision\"\n            className={styles.icon}\n          >\n            <path d=\"M3 12h18\" />\n            <path d=\"M3 6h18\" />\n            <path d=\"M3 18h18\" />\n          </svg>\n        )}\n      </button>\n      {state.isOpen && (\n        <OverlayContainer>\n          <ModalDialog isOpen onClose={state.close} />\n        </OverlayContainer>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}