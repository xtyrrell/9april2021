{"ast":null,"code":"/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Convert numbers or strings to pixel value\n// Helpful for styled-jsx when using a prop\n// height: ${toPixels(height)}; (supports height={20} and height=\"20px\")\nconst toPixels = value => {\n  if (typeof value === 'number') {\n    return `${value}px`;\n  }\n\n  return value;\n};\n\nexport default toPixels;","map":{"version":3,"sources":["/Users/shai/9april2021/lib/to-pixels.ts"],"names":["toPixels","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,MAAMA,QAAQ,GAAIC,KAAD,IAA4B;AAC3C,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAQ,GAAEA,KAAM,IAAhB;AACD;;AAED,SAAOA,KAAP;AACD,CAND;;AAQA,eAAeD,QAAf","sourcesContent":["/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Convert numbers or strings to pixel value\n// Helpful for styled-jsx when using a prop\n// height: ${toPixels(height)}; (supports height={20} and height=\"20px\")\n\nconst toPixels = (value: string | number) => {\n  if (typeof value === 'number') {\n    return `${value}px`;\n  }\n\n  return value;\n};\n\nexport default toPixels;\n"]},"metadata":{},"sourceType":"module"}