{"ast":null,"code":"var _s = $RefreshSig$();\n\n/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\n/**\n * If `paramName` exists in query string, then call `setEmail()` with the value\n * and delete it from the URL.\n */\n\nexport default function useEmailQueryParam(paramName, setEmail) {\n  _s();\n\n  var router = useRouter();\n  useEffect(function () {\n    if ('URLSearchParams' in window) {\n      var _window$location = window.location,\n          search = _window$location.search,\n          pathname = _window$location.pathname;\n      var params = new URLSearchParams(search);\n\n      var _email = params.get(paramName);\n\n      if (_email) {\n        setEmail(_email);\n        params[\"delete\"](paramName);\n        var newSearch = params.toString();\n        var newAsPath = pathname + (newSearch ? \"?\".concat(newSearch) : '');\n        var newPathname = router.pathname + (newSearch ? \"?\".concat(newSearch) : '');\n        history.replaceState({\n          url: newPathname,\n          as: newAsPath,\n          options: {\n            shallow: true\n          }\n        }, '', newAsPath);\n      }\n    }\n  }, [setEmail, router.pathname, paramName]);\n}\n\n_s(useEmailQueryParam, \"vQduR7x+OPXj6PSmJyFnf+hU7bg=\", false, function () {\n  return [useRouter];\n});","map":{"version":3,"sources":["/Users/shai/9april2021/lib/hooks/use-email-query-param.ts"],"names":["useEffect","useRouter","useEmailQueryParam","paramName","setEmail","router","window","location","search","pathname","params","URLSearchParams","email","get","newSearch","toString","newAsPath","newPathname","history","replaceState","url","as","options","shallow"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,kBAAT,CACbC,SADa,EAEbC,QAFa,EAGb;AAAA;;AACA,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACAD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,qBAAqBM,MAAzB,EAAiC;AAAA,6BACFA,MAAM,CAACC,QADL;AAAA,UACvBC,MADuB,oBACvBA,MADuB;AAAA,UACfC,QADe,oBACfA,QADe;AAE/B,UAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoBH,MAApB,CAAf;;AACA,UAAMI,MAAK,GAAGF,MAAM,CAACG,GAAP,CAAWV,SAAX,CAAd;;AACA,UAAIS,MAAJ,EAAW;AACTR,QAAAA,QAAQ,CAACQ,MAAD,CAAR;AACAF,QAAAA,MAAM,UAAN,CAAcP,SAAd;AACA,YAAMW,SAAS,GAAGJ,MAAM,CAACK,QAAP,EAAlB;AACA,YAAMC,SAAS,GAAGP,QAAQ,IAAIK,SAAS,cAAOA,SAAP,IAAqB,EAAlC,CAA1B;AACA,YAAMG,WAAW,GAAGZ,MAAM,CAACI,QAAP,IAAmBK,SAAS,cAAOA,SAAP,IAAqB,EAAjD,CAApB;AACAI,QAAAA,OAAO,CAACC,YAAR,CACE;AAAEC,UAAAA,GAAG,EAAEH,WAAP;AAAoBI,UAAAA,EAAE,EAAEL,SAAxB;AAAmCM,UAAAA,OAAO,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX;AAA5C,SADF,EAEE,EAFF,EAGEP,SAHF;AAKD;AACF;AACF,GAlBQ,EAkBN,CAACZ,QAAD,EAAWC,MAAM,CAACI,QAAlB,EAA4BN,SAA5B,CAlBM,CAAT;AAmBD;;GAxBuBD,kB;UAIPD,S","sourcesContent":["/**\n * Copyright 2020 Vercel Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\n/**\n * If `paramName` exists in query string, then call `setEmail()` with the value\n * and delete it from the URL.\n */\nexport default function useEmailQueryParam(\n  paramName: string,\n  setEmail: (email: string) => unknown\n) {\n  const router = useRouter();\n  useEffect(() => {\n    if ('URLSearchParams' in window) {\n      const { search, pathname } = window.location;\n      const params = new URLSearchParams(search);\n      const email = params.get(paramName);\n      if (email) {\n        setEmail(email);\n        params.delete(paramName);\n        const newSearch = params.toString();\n        const newAsPath = pathname + (newSearch ? `?${newSearch}` : '');\n        const newPathname = router.pathname + (newSearch ? `?${newSearch}` : '');\n        history.replaceState(\n          { url: newPathname, as: newAsPath, options: { shallow: true } },\n          '',\n          newAsPath\n        );\n      }\n    }\n  }, [setEmail, router.pathname, paramName]);\n}\n"]},"metadata":{},"sourceType":"module"}